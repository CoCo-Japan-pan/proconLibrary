{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++ build active file",
            "command": "/usr/bin/g++",
            // (重要!!) 引数を変えたらbits/stdc++.hのプリコンパイルを再度行う
            "args": [
                "-std=c++17", // C++20以降だとAtcoderLibraryが使えん
                "-Wall", // 警告を出す
                "-Wextra", // さらに色々警告を出す
                "-Wno-char-subscripts", // char型の添え字を警告しないようにする
                "-ftrapv", // オーバーフローの検出
                "-fsanitize=address,undefined", // メモリエラー
                "-fno-omit-frame-pointer", // メモリエラーの場所を見やすくする
                "-fno-sanitize-recover", // メモリエラーですぐに抜ける
                "-fdiagnostics-color=always",
                "-D_GLIBCXX_DEBUG", // STLのassert類
                "-D DEBUG", // LOCALでDEBUGしたいときのみ実行するassertとか
                "-I", //AtCoderLibraryをincludeするため追記
                "~/Procon_CPP/include/", //AtCoderLibraryをincludeするため追記
                "-g",
                "${file}",
                "-o",
                "${fileDirname}/a.out"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        },
        {
            "label": "disable leak sanitizer", 
            "type": "shell",
            "command": "export LSAN_OPTIONS=detect_leaks=0"
        },
        {
            // gdbはleak sanitizer と一緒には使えないみたいなのでここではオフに
            "label": "build active file and disable leak sanitizer",
            "dependsOn":[
                "C/C++: g++ build active file",
                "disable leak sanitizer"
            ],
            "type": "shell"
        },
        {
            "label": "able leak sanitizer",
            "type": "shell",
            "command": "export LSAN_OPTIONS=detect_leaks=1"
        }
    ],
    "version": "2.0.0"
}